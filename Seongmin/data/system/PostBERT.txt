<div id="readme" class="Box-body readme blob instapaper_body js-code-block-container">
   <article class="markdown-body entry-content p-3 p-md-6" itemprop="text"><h1><a id="user-content-bubblejoseon" class="anchor" aria-hidden="true" href="#PostBERT"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>PostBERT</h1>

<p><a href="https://shields.io/#/" rel="nofollow"><img src="https://camo.githubusercontent.com/72a3104bb033d54b7bbc1a08bd794c6106083818/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d557365642d626c75652e737667" alt="Python" data-canonical-src="https://img.shields.io/badge/Python-Used-blue.svg" style="max-width:100%;"></a> <a href="https://shields.io/#/" rel="nofollow"><img src="https://camo.githubusercontent.com/f41ba58accd5aab69bb2175404c3fd531bd20ac0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5048502d557365642d6c69676874677265792e737667" alt="PHP" data-canonical-src="https://img.shields.io/badge/PHP-Used-lightgrey.svg" style="max-width:100%;"></a> <a href="https://shields.io/#/" rel="nofollow"><img src="https://camo.githubusercontent.com/e00b86939895f8dafa743e73a37f15d7ac494957/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6176615363726970742d557365642d627269676874677265656e2e737667" alt="JavaScript" data-canonical-src="https://img.shields.io/badge/JavaScript-Used-brightgreen.svg" style="max-width:100%;"></a> <a href="https://shields.io/#/" rel="nofollow"><img src="https://camo.githubusercontent.com/125c797e9412145242a6e1b225a43389352a78dd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53514c2d557365642d3963662e737667" alt="SQL" data-canonical-src="https://img.shields.io/badge/SQL-Used-9cf.svg" style="max-width:100%;"></a> <a href="https://shields.io/#/" rel="nofollow"><img src="https://camo.githubusercontent.com/11140edc7a53167595b8bf94ba489d849c63713a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f48544d4c2532464353532d557365642d79656c6c6f772e737667" alt="HTML/CSS" data-canonical-src="https://img.shields.io/badge/HTML%2FCSS-Used-yellow.svg" style="max-width:100%;"></a> <a href="https://shields.io/#/" rel="nofollow"><img src="https://camo.githubusercontent.com/6618e9538c150a1adf951610a8fdfdaa1c74465a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f522d557365642d626c756576696f6c65742e737667" alt="R" data-canonical-src="https://img.shields.io/badge/R-Used-blueviolet.svg" style="max-width:100%;"></a></p>
<h2><a id="user-content-abstract" class="anchor" aria-hidden="true" href="#abstract"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Abstract</h2>
<p>PostBERT was made to simulate how the BERT model interprets the polysemy of words involving Korean postpositions by each epoch.</p>
<h3><a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Screenshots</h3>
<hr>
<div>
 <a target="_blank" rel="noopener noreferrer" href="https://seongmin-mun.github.io/VisualSystem/Major/PostBERT/index.html"><img src="./assets/images/Screenshot/PostBERT.png" style="max-width:100%;"></a>
</div>
<ul>
<li><a href="https://seongmin-mun.github.io/VisualSystem/Major/PostBERT/index.html" rel="nofollow">Try to use PostBERT</a></li>
</ul>
<h2><a id="user-content-description" class="anchor" aria-hidden="true" href="#description"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Description</h2>
<p>The figure shows the interface of the developed visualization system. (a) provides options to select the postpositions and checkboxes to highlight and tracking interesting sentences according to the index number or the function of these postpositions. (b) shows a distributional map of the sentence-level embeddings reduced to two dimensions using t-SNE. It also allows users to see the details of each sentence (represented as points) when the users hover their cursor over the circle. This allows the user to check the information such as an index number of the selected sentence, the intended function of the postpositions used in the sentence, and the raw sentence. At the bottom of (b), there is a play button to see the changes of the BERT outcome in each epoch. (c) shows two different types of BERT: (a) multi-line charts for its performance and (b) a bar chart for density cluster. The multi-line charts on the right side of the visualization system (see (c)) allow users to see the BERT performance such as overall accuracy, by-function accuracy, and loss in relation to the classification task by epoch (i.e., learning). This view also provides a hovering function to see the detailed score of each line in each epoch. The bar chart at the bottom of the right side of the visualization system (see (c)) is to present the number of clusters indicating how BERT classified the sentences by their function in each epoch. This bar chart also provides a hovering function to see the actual number of clusters in each epoch.</p>
<h3><a id="user-content-skills" class="anchor" aria-hidden="true" href="#skills"><svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a>Skills</h3>
<hr>
<p>Machine Learning &amp; NLP &amp; Statistics</p>
<ul>
<li>Computer Languages: Java, R, Python</li>
<li>DataBase: MySQL</li>
<li>Machine Learning: Sentence-Embedding (Bidirectional Encoder Representations from Transformers), t-SNE (t-Distributed Stochastic Neighbor Embedding)</li>
<li>NLP-based methods: Dependency tagger, POS tagger, Pre-Processing (tokenization, lemmatization, N-gram, window size), etc.</li>
<li>Statistics: Density-based clustering, Independence t-test, Correlation</li>
<li>Tools: IntelliJ IDEA, RStudio, PyCharm, bitnami</li>
</ul>
<p>Visualization Technique</p>
<ul>
<li>Visualization Method: Force directed graph, Distributional semantic map, Multi-line chart</li>
</ul>
<p>Server (Back-end)</p>
<ul>
<li>Computer Languages: Java, Python, PHP</li>
<li>DataBase: MySQL</li>
<li>Libraries: Java (KKMA(org.snu.ids.ha), Eunjeon (org.bitbucket.eunjeon.seunjeon)), Python (numpy, sklearn, pandas, nltk, gensim, scipy)</li>
<li>Tools: IntelliJ IDEA, PyCharm</li>
</ul>
<p>Client (Front-end)</p>
<ul>
<li>Computer Languages: javascript (d3.js, jquery.js), html/css</li>
<li>DataBase: json</li>
<li>Tools: Atom, WebStorm</li>
</ul>
</article>
  </div>

    </div>
    <br><br>
